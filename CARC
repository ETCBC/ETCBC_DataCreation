


BIBLICAL LANGUAGES                                        CARC(5)



NAME
     CARC - clause atom relation codes

DESCRIPTION
     The clause atom relations are represented in the PX(5)  file
     by  integer  codes,  which  are  calculated automatically by
     syn04types(1) on the basis of the tabulations stored in  the
     usertab(5)  file.   They  are  not  intended  to be assigned
     directly by the user.  Clause atom relations are  structured
     as  trees,  with  clause  atoms as nodes.  As such, a clause
     atom has only one mother, unless it is the root of the tree,
     but  can  have  several daughters.  A PX(5) file can contain
     more than one clause atom relation tree, with each such tree
     called a `segment'.

     In PX(5), a `relation list' is defined for the  clause  atom
     relations,  which contains both the relation with its mother
     and the relation with its daughters.  Each clause atom rela-
     tion  is  denoted  by two integers, the first indicating the
     distance and the second holding the relation code.  The dis-
     tance  is  measured in clause atoms, with negative distances
     for connections to preceding clause atoms.  For instance, if
     clause  atom  52 has a relation with distance -3, that means
     that it has a relation with clause atom 49.

     How to find the mother in the list?  (This only applies,  of
     course, if the atom is not a root.)  If the clause atom car-
     ries the instruction `\' of a downward connection, then  the
     greatest  positive distance is that of the relation with the
     mother.  Otherwise the smallest negative distance (that  is,
     longest negative distance) belongs to the mother.

     How to determine whether or not the clause atom is  a  root?
     This  cannot  be deduced from the clause atom relation codes
     alone, and has to be inferred from the context, in  particu-
     lar from the tabulations and the instructions `N' and `\'.

     The canonical order in which the relations are  listed,  is:
     first  the  negative distances in descending order (that is,
     in ascending order of their absolute value), then the  posi-
     tive distances in ascending order.

  Relation Code
     Clause atom relation is denoted by  a  decimal  code,  which
     designates  the  class the relation belongs to, and which is
     constructed from the values  displayed  below.   The  method
     used  for  constructing  the  code  is  explained  with  the
     description of the relation classes.

  Values used in constructing the codes
     The values used  in  constructing  the  codes  are  language
     dependent  and  defined  in  the  four  sections of the file



Werkgroep Informatica Last change: 14/09/19                     1






BIBLICAL LANGUAGES                                        CARC(5)



     CodesList(5).  They assign an integer value to the following
     clause features.

     Tense of verbal predicate of the clause               0-9
     Preposition class of the infinitive clause atom      0-49
     Conjunction class of the clause atom opening      100-900
     Preposition class of the clause atom opening      100-900

     The conjunction and preposition classes in CodesList(5)  are
     of  a  distributional,  not  functional, nature.  They group
     lexemes which are hypothesised to share one  or  more  func-
     tional  aspects  into  tentative sets, so that the resulting
     clause atom relations codes constitute a  useful  collection
     of data for further research.

  Clause atom relation classes
     There are nine  clause  atom  relation  classes,  which  are
     Defective,  Parallel,  Quotation,  Relative, Infinitive Con-
     struct,  Conjunction,  Conjunctive  Adverb,  Asyndetic,  and
     Unknown.   This  is  also  their  order of precedence, which
     means that the first class that fits the relation,  applies.
     The classes are now further described in the numerical order
     of their codes, which is not the same as the order  of  pre-
     cedence  given  above.   We shall use the term `opening con-
     junction'  for  the  initial  conjunction  phrase   of   the
     daughter,  disregarding  a  possible  paratactic conjunction
     phrase.  An initial phrase headed by a preposition, but of a
     phrase  type  other than prepositional phrase, is treated as
     an opening conjunction in the same manner.  (This applies to
     the  verbal  phrases  of  the infinitive construct.)  If the
     opening conjunction ends  in  a  conjunction,  the  relation
     class is determined by the conjunction class of the conjunc-
     tion.  Otherwise, if the opening conjunction starts  with  a
     preposition,  the relation class is determined by the prepo-
     sition class of the preposition.  In the codes that  follow,
     unless  stated otherwise, the first digit in the offset from
     the clause opening class is the tense of the  verbal  predi-
     cate  of  the daughter clause, the second that of the mother
     clause.

     0 No relation
          Zero indicates the absence of a clause atom relation.

     10-19 Relative clause atoms
          Clause atoms of which the opening conjunction is parsed
          as  Relative.  The last digit is the code for the tense
          of the verbal predicate  of  the  daughter  clause,  as
          defined in CodesList(5).

     50-99 Infinitive construct clause atoms
          Clause atoms of which the verbal predicate is an infin-
          itive  construct.   The  offset from 50 is the class of



Werkgroep Informatica Last change: 14/09/19                     2






BIBLICAL LANGUAGES                                        CARC(5)



          the preposition heading the opening conjunction.

     100-199 Asyndetic clause atoms
          Construction without a conjunction.

     200-201 Parallel clause atoms
          Two clause atoms are parallel if they concur in subject
          presence  and  have equivalent phrases up to the predi-
          cate, provided that the daughter is not subordinated.

          200   Identical clause opening.
          201   Identical clause opening, save a coordinating conjunction.

     220-223 Defective clause atoms. Unclassified relation
          A daughter clause atom is defective if  it  belongs  to
          the  same clause as the mother.  A clause atom relation
          is Unknown  (unclassified)  if  none  of  the  relation
          classes  with higher precedence apply.  This is indica-
          tive of a parsing error or an incomplete CodesList(5).

          220   No verbal predicate in mother or daughter
          221   Unclassified clause atom relation
          222   Verbal predicate in daughter clause atom
          223   Verbal predicate in mother clause atom

     300-399 Conjunctive adverbs
          Asyndetic construction, but with a conjunctive adverb.

     400-499 Coordinate clause atoms
          Construction with a conjunction  from  class  400,  the
          `coordinating' conjunctions.

     500-599 Postulational clause atoms
          Construction with a conjunction  from  class  500,  the
          `postulational' conjunctions.

     600-699 Conditional clause atoms
          Construction with a conjunction  from  class  600,  the
          `hypothetical' conjunctions.

     700-799 Temporal clause atoms
          Construction with a conjunction  from  class  700,  the
          `temporal' conjunctions.

     800-899 Final clause atoms
          Construction with a conjunction  from  class  800,  the
          `final' conjunctions.

     900-998 Causal clause atoms
          Construction with a conjunction  from  class  900,  the
          `causal' conjunctions.




Werkgroep Informatica Last change: 14/09/19                     3






BIBLICAL LANGUAGES                                        CARC(5)



     999 Quotation
          This relation is issued to the daughter of an introduc-
          tion  of  direct speech with a verbum dicendi.  Also to
          the  daughter  confirming  direct  speech,  opening   a
          (small)  paragraph  with  a verbum dicendi (for example
          Jes 40:1).

SEE ALSO
     CodesList(5), PX(5), syn04types(1), syn05Syr(1).














































Werkgroep Informatica Last change: 14/09/19                     4



