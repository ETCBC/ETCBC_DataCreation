


BIBLICAL LANGUAGES                                     USERTAB(5)



NAME
     usertab - user-approved instructions to syn04types

SYNTAX
     file =              clause_atom { clause_atom }.

     clause_atom =       section1 `:' section2 `#' catm_relations
                         <newline>.

     section1 =          subtypes indentation `:' line `:' clause
                         `:'  first_phrase  `:'   last_phrase `:'
                         clause_type `:'  ccr_type  `:'  ccr_dist
                         `:' sentence.

     section2 =          text_type `:' paragraph `:' catm_type.

     catm_relations =    car { car }.

     subtypes =          subtype1 subtype2.

     indentation =       `T' integer.

     line =              `L' integer.

     clause =            `C' integer.

     first_phrase =      `P1' integer.

     last_phrase =       `Pl' integer.

     clause_type =       `Cty' integer.

     ccr_type =          `CCR' integer.

     ccr_dist =          `dis' integer.

     sentence =          `S' integer.

     text_type =         ttc { ttc }.

     paragraph =         integer.

     catm_type =         string.

     ttc =               `?'| `D'| `N'| `Q'.

     car =               car_dist car_type.

     car_dist =          integer.

     car_type =          integer.




Werkgroep Informatica Last change: 14/09/02                     1






BIBLICAL LANGUAGES                                     USERTAB(5)



     subtype1 =          `.' | `c' | `d' | `l' | `m' | `r' |  `v'
                         | `x'.

     subtype2 =          `#' | `.' | `N' | `\' | `e' | `p' | `q'.

     In the classic usertab  file,  no  white  space  is  allowed
     between  subtype1 and subtype2.  Although it is not required
     by the format, syn04types(1)  assumes  that  the  text  type
     string  is  padded  with spaces to a length of eight charac-
     ters.  The integers are signed integers.

DESCRIPTION
     The  usertab  file  records  the   information   needed   by
     syn04types(1)  to  recreate the clause hierarchy approved by
     the user in an interactive session.  It has a single line of
     information for every clause atom in the text.  The informa-
     tion is a copy of the corresponding parts of the PX(5) file,
     quo vide.

     line Line number in the file.  Used to check  the  integrity
          of the file.

     ccr_type
          The relation code of the clause constituent relation as
          described in PX(5).

     ccr_dist
          The distance code of the clause constituent relation as
          described in PX(5).

     catm_type
          An alphanumeric string indicating the clause atom  type
          as described in PX(5).

     ttc  A text type character as described in PX(5).

     car  A clause atom relation code as described in CARC(5).

     subtype1
          The first subtype indicates  whether  the  clause  atom
          effectively contains a predicate, and if not, why.  The
          character codes are summarised in the table below.


          `.'   <empty>
          `c'   casus pendens
          `d'   defective
          `l'   ellipsis
          `m'   macrosyntactic sign
          `r'   reopening
          `v'   vocative
          `x'   extraposition



Werkgroep Informatica Last change: 14/09/02                     2






BIBLICAL LANGUAGES                                     USERTAB(5)



     subtype2
          The second subtype indicates the status of  the  clause
          atom  in  the text.  The character codes are summarised
          in the table below.


          `#'   new paragraph
          `.'   <empty>
          `N'   no connection
          `\'   downward connection
          `e'   embedding
          `p'   proleptic ellipsis
          `q'   direct speech

SEE ALSO
     CARC(5), PX(5), exusertab(1), syn04types(1), syn0div(1).







































Werkgroep Informatica Last change: 14/09/02                     3



